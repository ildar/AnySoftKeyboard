name: deployment

on:
  push:
    paths-ignore:
      - deployment/halt_deployment_marker
    branches:
      - master
      - gesture-typing-*
      - release-branch-*
  pull_request:
    paths-ignore:
      - deployment/halt_deployment_marker
    branches:
      - '*'

env:
  TERM: dumb
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  GRADLE_USER_HOME: ".github_cache_gradle/"

jobs:
  deploy:
    runs-on: ubuntu-18.04
    container: menny/ndk_ask:1.14.0
    steps:
      - uses: actions/checkout@v2
      - name: setup
        env:
          GITHUB_CONTEXT_JSON: ${{ toJson(github) }}
        run: |
          ./scripts/ci/ci_setup.sh
          mkdir -p outputs/apks || true
          mkdir -p outputs/fdroid || true
          mkdir -p ime/app/build/outputs/mapping || true
          mkdir -p build/github_object && echo "${GITHUB_CONTEXT_JSON}" > build/github_object/github_object.json
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: github_object
          path: build/github_object
      - name: status-in-progress
        run: ./gradlew --stacktrace :ime:app:assembleDebug
      - uses: actions/upload-artifact@v1.0.0
        if: always()
        with:
          name: deploy-logging
          path: build-logging
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: apks
          path: outputs/apks
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: proguard-mapping
          path: ime/app/build/outputs/mapping
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: fdroid-metadata
          path: outputs/fdroid
